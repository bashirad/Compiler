Index: src/Notes.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Front end -\r\n\tintermediate representation - concrete syntax trees\r\nBack end - website, optimization\r\n\r\nSemantic refers to meaning - type and scope\r\n\r\nLexer\r\n\tLex is called scanner\r\n\r\nParser\r\n\tif warning: report and continue compiler\r\n\tif error: report and stop compiler\r\n\tfocus on syntax - for example: print stmt must be like this \"print ( exp )\"\r\n\r\n\r\nAI\r\n\tusing AI works, and cite it then make a write a documentation about it.\r\n\r\nGitHub\r\n\tdevelop on separte 4 branches and then put the final code in main.\r\n\tsend email to Labouseur about this\r\n\r\nMake a class for Tokens and each time create an instance of the class\r\nOR\r\nuse stream functional programming in Java\r\n\r\n'=' assignment operator\r\n\r\nleft brace and right braces - begin program and end program\r\n\r\n$ end of program -\r\n\r\n\r\nif you are lexing more than one program -  lex until you find an error and then skip to the next program using the meta symbol\r\n\r\ndo not hardcode the filename\r\n\tthe filename is the first parameter\r\n\r\nLine and position numbers should be passed with the Tokens\r\n\r\nhave open quote and close quote symbols\r\n\r\n\r\nTEST CODE IS HERE:\r\n\r\n{}$\r\n{{{{{{}}}}}}$\r\n{{{{{{}}} /* comments are ignored */ }}}}$\r\n{ /* comments are still ignored */ int @}$\r\n{\r\n int a\r\n a = a\r\n string b\r\n a = b\r\n print (5)\r\n}$\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Notes.txt b/src/Notes.txt
--- a/src/Notes.txt	(revision 39d9cb5ad85db5759c1fc29653186f220d44b414)
+++ b/src/Notes.txt	(date 1678843153707)
@@ -1,48 +1,3 @@
-Front end -
-	intermediate representation - concrete syntax trees
-Back end - website, optimization
-
-Semantic refers to meaning - type and scope
-
-Lexer
-	Lex is called scanner
-
-Parser
-	if warning: report and continue compiler
-	if error: report and stop compiler
-	focus on syntax - for example: print stmt must be like this "print ( exp )"
-
-
-AI
-	using AI works, and cite it then make a write a documentation about it.
-
-GitHub
-	develop on separte 4 branches and then put the final code in main.
-	send email to Labouseur about this
-
-Make a class for Tokens and each time create an instance of the class
-OR
-use stream functional programming in Java
-
-'=' assignment operator
-
-left brace and right braces - begin program and end program
-
-$ end of program -
-
-
-if you are lexing more than one program -  lex until you find an error and then skip to the next program using the meta symbol
-
-do not hardcode the filename
-	the filename is the first parameter
-
-Line and position numbers should be passed with the Tokens
-
-have open quote and close quote symbols
-
-
-TEST CODE IS HERE:
-
 {}$
 {{{{{{}}}}}}$
 {{{{{{}}} /* comments are ignored */ }}}}$
Index: src/Parser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Parser.java b/src/Parser.java
new file mode 100644
--- /dev/null	(date 1678843153740)
+++ b/src/Parser.java	(date 1678843153740)
@@ -0,0 +1,11 @@
+public class Parser {
+    public static void main(String[] args) {
+        init("C:\\Users\\Bashir\\Documents\\Bashirs_Code_all\\Java\\cmpt432\\src\\code.txt");
+    }
+    public static void init( String path) {
+
+        System.out.println("\nINFO Parser - Parsing program " + 1 + " ... ");
+        /** start parsing the source code */
+
+    }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"ae957f00-b018-4c9e-9910-88cfda2a48de\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Lexer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Lexer.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Notes.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Notes.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Workstation2.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Workstation2.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/code.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/code.txt\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/src/Compiler.java\" root0=\"SKIP_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2KeL0yj9p1sNVH6nbk6V6fcFEjr\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Bashir/Documents/Bashirs_Code_all/Java/cmpt432/src&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Bashir\\Documents\\Bashirs_Code_all\\Java\\cmpt432\\src\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"\" />\r\n      <recent name=\"lexer\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Lexer\">\r\n    <configuration name=\"Lexer\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Lexer\" />\r\n      <module name=\"cmpt432\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Workstation4\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Workstation4\" />\r\n      <module name=\"cmpt432\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Lexer\" />\r\n        <item itemvalue=\"Application.Workstation4\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"ae957f00-b018-4c9e-9910-88cfda2a48de\" name=\"Changes\" comment=\"\" />\r\n      <created>1674329885509</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1674329885509</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-method\">\r\n          <url>file://$PROJECT_DIR$/src/Lexer.java</url>\r\n          <line>30</line>\r\n          <properties class=\"Lexer\" method=\"scan\">\r\n            <option name=\"EMULATED\" value=\"true\" />\r\n            <option name=\"WATCH_EXIT\" value=\"false\" />\r\n          </properties>\r\n          <option name=\"timeStamp\" value=\"8\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <watches-manager>\r\n      <configuration name=\"Application\">\r\n        <watch expression=\"strBuilder\" language=\"JAVA\" />\r\n        <watch expression=\"i\" language=\"JAVA\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 39d9cb5ad85db5759c1fc29653186f220d44b414)
+++ b/.idea/workspace.xml	(date 1678843041147)
@@ -2,11 +2,10 @@
 <project version="4">
   <component name="ChangeListManager">
     <list default="true" id="ae957f00-b018-4c9e-9910-88cfda2a48de" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Lexer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Lexer.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Notes.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/Notes.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Workstation2.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Workstation2.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/code.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/code.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/Parser.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Compiler.class" beforeDir="false" afterPath="$PROJECT_DIR$/src/Compiler.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Compiler.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Compiler.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Lexer.class" beforeDir="false" afterPath="$PROJECT_DIR$/src/Lexer.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -71,6 +70,8 @@
     </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="Application.Workstation4" />
+        <item itemvalue="Application.Lexer" />
         <item itemvalue="Application.Lexer" />
         <item itemvalue="Application.Workstation4" />
       </list>
Index: src/Compiler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import imp.ICompiler;\r\n\r\npublic class Compiler implements ICompiler {\r\n    // TODO main must take an input of a file\r\n    public static void main(String[] args) {\r\n\r\n        if (args.length > 0) {\r\n            String filePath = args[0];\r\n            // Do something with the file\r\n\r\n        /** Execute the Lexer                   */\r\n        Lexer.init(filePath);\r\n        /** Execute the Parser                  */\r\n\r\n\r\n        /** Execute the Semantics ...           */\r\n\r\n\r\n        /** Execute the 6502 Code Generator     */\r\n    }\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Compiler.java b/src/Compiler.java
--- a/src/Compiler.java	(revision 39d9cb5ad85db5759c1fc29653186f220d44b414)
+++ b/src/Compiler.java	(date 1678843153680)
@@ -1,7 +1,6 @@
 import imp.ICompiler;
 
 public class Compiler implements ICompiler {
-    // TODO main must take an input of a file
     public static void main(String[] args) {
 
         if (args.length > 0) {
@@ -10,8 +9,9 @@
 
         /** Execute the Lexer                   */
         Lexer.init(filePath);
+
         /** Execute the Parser                  */
-
+        Parser.init(filePath);
 
         /** Execute the Semantics ...           */
 
